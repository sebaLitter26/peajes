{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/album-add.component.ts","webpack:///./src/app/components/album-detail.component.ts","webpack:///./src/app/components/album-edit.component.ts","webpack:///./src/app/components/artist-add.component.ts","webpack:///./src/app/components/artist-detail.component.ts","webpack:///./src/app/components/artist-edit.component.ts","webpack:///./src/app/components/artist-list.component.ts","webpack:///./src/app/components/home.component.ts","webpack:///./src/app/components/player.component.ts","webpack:///./src/app/components/song-add.component.ts","webpack:///./src/app/components/song-edit.component.ts","webpack:///./src/app/components/user-edit.component.ts","webpack:///./src/app/index.ts","webpack:///./src/app/models/album.ts","webpack:///./src/app/models/artist.ts","webpack:///./src/app/models/song.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/album.service.ts","webpack:///./src/app/services/artist.service.ts","webpack:///./src/app/services/global.ts","webpack:///./src/app/services/song.service.ts","webpack:///./src/app/services/upload.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/views/album-add.html","webpack:///./src/app/views/album-detail.html","webpack:///./src/app/views/artist-add.html","webpack:///./src/app/views/artist-detail.html","webpack:///./src/app/views/artist-list.html","webpack:///./src/app/views/home.html","webpack:///./src/app/views/song-add.html","webpack:///./src/app/views/user-edit.html","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/polyfills.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gOAAgO,OAAO,wkBAAwkB,0CAA0C,2DAA2D,eAAe,6wBAA6wB,cAAc,k1BAAk1B,eAAe,m9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7+E;AACe;AAEtB;AACW;AACjB;AASrC;IAUE,sBACU,MAAsB,EACtB,OAAe,EACf,YAAwB;QAFxB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAY;QAZ3B,UAAK,GAAG,QAAQ,CAAC;QAcvB,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAE1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEM,+BAAQ,GAAf;QAAA,iBAuDC;QAtDA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtB,+CAA+C;QAC/C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,kBAAQ;YACJ,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC7B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAE3B,IAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAC;gBAClB,KAAK,CAAC,+CAA+C,CAAC,CAAC;aAC1D;iBAAI;gBACD,iEAAiE;gBACjE,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAE3D,0DAA0D;gBAC1D,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,SAAS,CACjD,kBAAQ;oBACJ,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAC3B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEnB,IAAG,KAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAC;wBACtB,KAAK,CAAC,0CAA0C,CAAC,CAAC;qBACrD;yBAAI;wBACD,gEAAgE;wBAChE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;wBACrC,KAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,CAAC,CAAC;qBACvD;gBACL,CAAC,EACD,eAAK;oBACH,IAAI,YAAY,GAAQ,KAAK,CAAC;oBAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;wBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;wBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpB;gBACH,CAAC,CACF,CAAC;aACP;QACL,CAAC,EACD,eAAK;YACH,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,6BAAM,GAAN;QACG,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAID,uCAAgB,GAAhB;QAAA,iBA0BC;QAzBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CACtD,kBAAQ;YACN,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAG,CAAC,IAAI,CAAC,GAAG,EAAC;gBACX,KAAI,CAAC,aAAa,GAAG,sBAAsB,CAAC;aAC7C;iBAAI;gBACH,KAAI,CAAC,aAAa,GAAG,8DAA8D,GAAC,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC;gBAC7G,KAAI,CAAC,aAAa,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,CAAC,CAAC;aAC9D;QACH,CAAC,EACD,eAAK;YACH,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;gBAElC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IA1HU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE,CAAC,kEAAW,CAAC;SACzB,CAAC;yCAakB,8DAAc;YACb,sDAAM;YACF,kEAAW;OAbvB,YAAY,CA4HxB;IAAD,mBAAC;CAAA;AA5HwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiC;AACjB;AACI;AACF;AACkB;AAE7D,UAAU;AACqC;AACa;AAE5D,OAAO;AAC8D;AAErE,SAAS;AACgE;AACF;AACE;AACI;AAE7E,OAAO;AAC8D;AACE;AACI;AAE3E,OAAO;AAC4D;AACE;AACL;AA2BhE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAa;gBACb,iFAAiB;gBACjB,qFAAmB;gBACnB,mFAAkB;gBAClB,sFAAmB;gBACnB,0FAAqB;gBACrB,kFAAiB;gBACjB,oFAAkB;gBAClB,wFAAoB;gBACpB,gFAAgB;gBAChB,kFAAiB;gBACjB,6EAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;gBACV,oDAAO;aACR;YACD,SAAS,EAAE,CAAC,gEAAmB,CAAC;YAChC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrDtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEvD,cAAc;AAC8C;AACS;AAErE,gBAAgB;AACyD;AACF;AACE;AACI;AAE7E,eAAe;AACsD;AACE;AACI;AAE3E,cAAc;AACqD;AACE;AAErE,IAAM,SAAS,GAAW;IACzB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAa,EAAC;IACpC,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qFAAmB,EAAC;IACxD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,mFAAkB,EAAC;IACtD,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,qFAAmB,EAAC;IAC5D,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,yFAAqB,EAAC;IACvD,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,iFAAiB,EAAC;IAC3D,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,mFAAkB,EAAC;IACzD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uFAAoB,EAAC;IACpD,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gFAAgB,EAAC;IACxD,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kFAAiB,EAAC;IACvD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,wEAAa,EAAC;CACtC,CAAC;AAEK,IAAM,mBAAmB,GAAU,EAAE,CAAC;AACtC,IAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtC1B;AACe;AAErB;AACW;AACI;AACF;AAEjB;AAQxC;IASC,2BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B,EAC3B,cAA6B;QAJ7B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAC3B,mBAAc,GAAd,cAAc,CAAe;QAErC,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAE9C,CAAC;IAED,oCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAgCC;QA/BA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;YAE9B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5D,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC3C;qBAAI;oBACJ,KAAI,CAAC,YAAY,GAAG,uCAAuC,CAAC;oBAC5D,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAE5B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7D;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAGH,CAAC,CAAC,CAAC;IACJ,CAAC;IA5DW,iBAAiB;QAN7B,+DAAS,CAAC;YACV,QAAQ,EAAE,WAAW;;YAErB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,EAAE,oEAAY,CAAC;SACrD,CAAC;yCAYgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACV,oEAAY;YACX,sEAAa;OAd1B,iBAAiB,CA8D7B;IAAD,wBAAC;CAAA;AA9D6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBoB;AACe;AAErB;AACW;AACE;AAEF;AASvD;IAQC,8BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,aAA2B,EAC3B,YAAyB;QAJzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAc;QAC3B,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,uCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,yBAAyB;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAkDC;QAhDA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACpD,kBAAQ;gBACP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;oBAClB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAG5B,sBAAsB;oBACtB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CACpE,kBAAQ;wBACP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;4BAClB,KAAI,CAAC,YAAY,GAAG,+BAA+B,CAAC;yBACpD;6BAAI;4BACJ,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;yBAC5B;oBACF,CAAC,EACD,eAAK;wBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;wBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;4BACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;4BACnC,mCAAmC;4BAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBACpB;oBACR,CAAC,CAAC,CAAC;iBAGH;YACF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,mCAAmC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAEH,CAAC,CAAC,CAAC;IAEJ,CAAC;IAGD,8CAAe,GAAf,UAAgB,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,2CAAY,GAAZ;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,2CAAY,GAAZ,UAAa,EAAE;QAAf,iBAoBC;QAnBA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACrD,kBAAQ;YACP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;gBACjB,KAAK,CAAC,uBAAuB,CAAC,CAAC;aAC/B;YAED,KAAI,CAAC,QAAQ,EAAE,CAAC;QACjB,CAAC,EACD,eAAK;YACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;YAExB,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,mCAAmC;gBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACR,CAAC,CACD,CAAC;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,IAAI;QACf,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,GAAG,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;QACxD,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,GAAG,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAElE,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAEhD,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACpE,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAS,CAAC,IAAI,EAAE,CAAC;QACjD,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAS,CAAC,IAAI,EAAE,CAAC;QAElD,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QACjE,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/E,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IAE7E,CAAC;IA7HW,oBAAoB;QANhC,+DAAS,CAAC;YACV,QAAQ,EAAE,cAAc;;YAExB,SAAS,EAAE,CAAC,kEAAW,EAAE,oEAAY,EAAE,kEAAW,CAAC;SACnD,CAAC;yCAWgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACV,oEAAY;YACb,kEAAW;OAbtB,oBAAoB,CA8HhC;IAAD,2BAAC;CAAA;AA9HgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiB;AACe;AAErB;AACW;AACI;AACF;AAEjB;AAQxC;IAUC,4BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,cAA6B,EAC7B,aAA2B;QAJ3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAc;QAEnC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,qCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE/C,qBAAqB;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAyBC;QAxBA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACpD,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;oBAClB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;iBAC5B;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA0CC;QAzCA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACjE,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC3C;qBAAI;oBACJ,KAAI,CAAC,YAAY,GAAG,4CAA4C,CAAC;oBACjE,IAAG,CAAC,KAAI,CAAC,aAAa,EAAC;wBACtB,YAAY;wBACZ,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC3D;yBAAI;wBACJ,6BAA6B;wBAC7B,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,GAAC,qBAAqB,GAAC,EAAE,EAAE,EAAE,EAAE,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,KAAK,EAAE,OAAO,CAAC;6BACjH,IAAI,CACJ,UAAC,MAAM;4BACN,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC5D,CAAC,EACD,UAAC,KAAK;4BACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACpB,CAAC,CACD,CAAC;qBACH;iBAED;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAGD,4CAAe,GAAf,UAAgB,SAAc;QAC7B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;IA1GW,kBAAkB;QAN9B,+DAAS,CAAC;YACV,QAAQ,EAAE,YAAY;;YAEtB,SAAS,EAAE,CAAC,kEAAW,EAAE,oEAAY,EAAE,sEAAa,CAAC;SACrD,CAAC;yCAagB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACT,sEAAa;YACd,oEAAY;OAfxB,kBAAkB,CA4G9B;IAAD,yBAAC;CAAA;AA5G8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AACe;AAErB;AACW;AACI;AACjB;AAQ1C;IAQC,4BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,cAA6B;QAH7B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAe;QAErC,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,qDAAM,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,qCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAChD,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAyBC;QAxBA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC/D,kBAAQ;YAEP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;gBACnB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;aAC3C;iBAAI;gBACJ,KAAI,CAAC,YAAY,GAAG,yCAAyC,CAAC;gBAC9D,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAChE;QAEF,CAAC,EACD,eAAK;YACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;YAExB,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACR,CAAC,CACD,CAAC;IACH,CAAC;IAlDW,kBAAkB;QAN9B,+DAAS,CAAC;YACV,QAAQ,EAAE,YAAY;;YAEtB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,CAAC;SACvC,CAAC;yCAWgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACT,sEAAa;OAZ1B,kBAAkB,CAoD9B;IAAD,yBAAC;CAAA;AApD8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdmB;AACe;AAErB;AACW;AACI;AAEF;AASzD;IAQC,+BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,cAA6B,EAC7B,aAA2B;QAJ3B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAc;QAEnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,wCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,2EAA2E;QAC3E,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,yCAAS,GAAT;QAAA,iBA8CC;QA7CA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACtD,kBAAQ;gBACP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;oBACnB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAE9B,+BAA+B;oBAC/B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CACvE,kBAAQ;wBACP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;4BACnB,KAAI,CAAC,YAAY,GAAG,8BAA8B,CAAC;yBACnD;6BAAI;4BACJ,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;yBAC9B;oBACF,CAAC,EACD,eAAK;wBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;wBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;4BACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;4BACnC,mCAAmC;4BAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBACpB;oBACR,CAAC,CAAC,CAAC;iBAEH;YACF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,mCAAmC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAEH,CAAC,CAAC,CAAC;IACJ,CAAC;IAGD,+CAAe,GAAf,UAAgB,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,6CAAa,GAAb;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,6CAAa,GAAb,UAAc,EAAE;QAAhB,iBAoBC;QAnBA,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACvD,kBAAQ;YACP,IAAG,CAAC,QAAQ,CAAC,KAAK,EAAC;gBAClB,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC9B;YAED,KAAI,CAAC,SAAS,EAAE,CAAC;QAClB,CAAC,EACD,eAAK;YACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;YAExB,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,mCAAmC;gBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACR,CAAC,CACD,CAAC;IACH,CAAC;IAxGW,qBAAqB;QANjC,+DAAS,CAAC;YACV,QAAQ,EAAE,eAAe;;YAEzB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,EAAE,oEAAY,CAAC;SACrD,CAAC;yCAWgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACT,sEAAa;YACd,oEAAY;OAbxB,qBAAqB,CA2GjC;IAAD,4BAAC;CAAA;AA3GiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBgB;AACe;AAErB;AACW;AACI;AACA;AACjB;AAQ1C;IASC,6BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,cAA6B,EAC7B,cAA6B;QAJ7B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAe;QAC7B,mBAAc,GAAd,cAAc,CAAe;QAErC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,qDAAM,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,sCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,2EAA2E;QAC3E,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,uCAAS,GAAT;QAAA,iBAyBC;QAxBA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACtD,kBAAQ;gBACP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;oBACnB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;iBAC9B;YACF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,mCAAmC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAEH,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,sCAAQ,GAAR;QAAA,iBA0CC;QAzCA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACpE,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;oBACnB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC3C;qBAAI;oBACJ,KAAI,CAAC,YAAY,GAAG,8CAA8C,CAAC;oBACnE,IAAG,CAAC,KAAI,CAAC,aAAa,EAAC;wBACtB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,CAAC;qBAC1D;yBAAI;wBACJ,6BAA6B;wBAC7B,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,GAAC,sBAAsB,GAAC,EAAE,EAAE,EAAE,EAAE,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,KAAK,EAAE,OAAO,CAAC;6BAClH,IAAI,CACJ,UAAC,MAAM;4BACN,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC1D,CAAC,EACD,UAAC,KAAK;4BACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACpB,CAAC,CACD,CAAC;qBACH;iBAED;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAGD,6CAAe,GAAf,UAAgB,SAAc;QAC7B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;IAzGW,mBAAmB;QAN/B,+DAAS,CAAC;YACV,QAAQ,EAAE,aAAa;;YAEvB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,EAAE,sEAAa,CAAC;SACtD,CAAC;yCAYgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACT,sEAAa;YACb,sEAAa;OAd1B,mBAAmB,CA2G/B;IAAD,0BAAC;CAAA;AA3G+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfkB;AACe;AAErB;AACW;AACI;AAS3D;IASC,6BACS,MAAsB,EACtB,OAAe,EACf,cAA6B,EAC7B,YAAyB;QAHzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAe;QAC7B,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACpB,CAAC;IAED,sCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,mCAAmC;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAED,wCAAU,GAAV;QAAA,iBAkCC;QAjCA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACxC,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAG,CAAC,IAAI,EAAC;gBACR,IAAI,GAAG,CAAC,CAAC;aACT;iBAAI;gBACJ,KAAI,CAAC,SAAS,GAAG,IAAI,GAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,SAAS,GAAG,IAAI,GAAC,CAAC,CAAC;gBAExB,IAAG,KAAI,CAAC,SAAS,IAAI,CAAC,EAAC;oBACtB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACnB;aACD;YAED,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,SAAS,CACzD,kBAAQ;gBACP,IAAG,CAAC,QAAQ,CAAC,OAAO,EAAC;oBACpB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;iBAChC;YACF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,mCAAmC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAGD,6CAAe,GAAf,UAAgB,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,4CAAc,GAAd;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,4CAAc,GAAd,UAAe,EAAE;QAAjB,iBAmBC;QAlBA,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CACzD,kBAAQ;YACP,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;gBACnB,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC9B;YACD,KAAI,CAAC,UAAU,EAAE,CAAC;QACnB,CAAC,EACD,eAAK;YACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;YAExB,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,mCAAmC;gBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACR,CAAC,CACD,CAAC;IACH,CAAC;IA9FW,mBAAmB;QAN/B,+DAAS,CAAC;YACV,QAAQ,EAAE,aAAa;;YAEvB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,CAAC;SACvC,CAAC;yCAYgB,8DAAc;YACb,sDAAM;YACC,sEAAa;YACf,kEAAW;OAbtB,mBAAmB,CAgG/B;IAAD,0BAAC;CAAA;AAhG+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACdkB;AACe;AAOjE;IAGC,uBACS,MAAsB,EACtB,OAAe;QADf,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QAEvB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;IAC1B,CAAC;IAED,gCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC1C,CAAC;IAZW,aAAa;QALzB,+DAAS,CAAC;YACV,QAAQ,EAAE,MAAM;;SAEhB,CAAC;yCAMgB,8DAAc;YACb,sDAAM;OALZ,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRsB;AACZ;AACM;AAmC1C;IAIC;QACC,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,kCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE9B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,IAAG,IAAI,EAAC;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;aAAI;YACJ,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;SACrC;IACF,CAAC;IAjBW,eAAe;QAjC3B,+DAAS,CAAC;YACV,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,+xBA4BT;SACD,CAAC;;OAEW,eAAe,CAkB3B;IAAD,sBAAC;CAAA;AAlB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCsB;AACe;AAErB;AACW;AACA;AACjB;AAQtC;IAQC,0BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,YAAyB;QAHzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAExC,CAAC;IAED,mCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC9C,CAAC;IAGD,mCAAQ,GAAR;QAAA,iBAiCC;QA/BA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/B,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YAE3B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzD,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;oBACjB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC3C;qBAAI;oBACJ,KAAI,CAAC,YAAY,GAAG,yCAAyC,CAAC;oBAC9D,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAE1B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC3D;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAEH,CAAC,CAAC,CAAC;IAEJ,CAAC;IA5DW,gBAAgB;QAN5B,+DAAS,CAAC;YACV,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE,CAAC,kEAAW,EAAE,kEAAW,CAAC;SACrC,CAAC;yCAWgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACX,kEAAW;OAZtB,gBAAgB,CA+D5B;IAAD,uBAAC;CAAA;AA/D4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdqB;AACe;AAErB;AACW;AACI;AACJ;AACjB;AAQtC;IASC,2BACS,MAAsB,EACtB,OAAe,EACf,YAAyB,EACzB,cAA6B,EAC7B,YAAyB;QAJzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAe;QAC7B,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,oCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,4BAA4B;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,mCAAO,GAAP;QAAA,iBAyBC;QAxBA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAClD,kBAAQ;gBACP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;oBACjB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAI;oBACJ,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;YACF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,mCAAmC;oBAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;QAAA,iBA4CC;QA1CA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACzC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC9D,kBAAQ;gBAEP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;oBACjB,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;iBAC3C;qBAAI;oBACJ,KAAI,CAAC,YAAY,GAAG,+CAA+C,CAAC;oBAEpE,IAAG,CAAC,KAAI,CAAC,aAAa,EAAC;wBACtB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;qBACvD;yBAAI;wBACJ,4BAA4B;wBAC5B,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,GAAC,mBAAmB,GAAC,EAAE,EAAE,EAAE,EAAE,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,KAAK,EAAE,MAAM,CAAC;6BAC9G,IAAI,CACJ,UAAC,MAAM;4BACN,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACxD,CAAC,EACD,UAAC,KAAK;4BACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACpB,CAAC,CACD,CAAC;qBACH;iBACD;YAEF,CAAC,EACD,eAAK;gBACJ,IAAI,YAAY,GAAQ,KAAK,CAAC;gBAExB,IAAG,YAAY,IAAI,IAAI,EAAC;oBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;YACR,CAAC,CACD,CAAC;QAEH,CAAC,CAAC,CAAC;IAEJ,CAAC;IAGD,2CAAe,GAAf,UAAgB,SAAc;QAC7B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;IA3GW,iBAAiB;QAN7B,+DAAS,CAAC;YACV,QAAQ,EAAE,WAAW;;YAErB,SAAS,EAAE,CAAC,kEAAW,EAAE,kEAAW,EAAE,sEAAa,CAAC;SACpD,CAAC;yCAYgB,8DAAc;YACb,sDAAM;YACD,kEAAW;YACT,sEAAa;YACf,kEAAW;OAdtB,iBAAiB,CA8G7B;IAAD,wBAAC;CAAA;AA9G6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfoB;AAEN;AACW;AASvD;IAQC,2BACS,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,uDAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,oCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAuCC;QAtCA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAChD,kBAAQ;YACP,IAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;gBACjB,KAAI,CAAC,YAAY,GAAG,iCAAiC,CAAC;aACtD;iBAAI;gBACJ,4BAA4B;gBAC5B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5D,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAEpE,IAAG,CAAC,KAAI,CAAC,aAAa,EAAC;oBACtB,cAAc;iBACd;qBAAI;oBACJ,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,GAAC,oBAAoB,GAAC,KAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAC7F,UAAC,MAAW;wBAEX,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;wBAC/B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBAE5D,IAAI,UAAU,GAAG,KAAI,CAAC,GAAG,GAAC,iBAAiB,GAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC5D,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;oBACzE,CAAC,CACD,CAAC;iBACF;gBAED,KAAI,CAAC,YAAY,GAAG,kCAAkC,CAAC;aACvD;QACF,CAAC,EACK,eAAK;YACD,IAAI,YAAY,GAAQ,KAAK,CAAC;YAE9B,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACL,CAAC,CACP,CAAC;IACH,CAAC;IAID,2CAAe,GAAf,UAAgB,SAAc;QAC7B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1D,CAAC;IAED,2CAAe,GAAf,UAAgB,GAAW,EAAE,MAAqB,EAAE,KAAkB;QACrE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,OAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YAC1C,IAAI,QAAQ,GAAO,IAAI,QAAQ,EAAE,CAAC;YAClC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAE/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACpC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAClD;YAED,GAAG,CAAC,kBAAkB,GAAG;gBACxB,IAAG,GAAG,CAAC,UAAU,IAAI,CAAC,EAAC;oBACtB,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;wBACpB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAClC;yBAAI;wBACJ,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBACrB;iBAED;YACF,CAAC;YAED,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YAC7C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IAEJ,CAAC;IAhGW,iBAAiB;QAN7B,+DAAS,CAAC;YACV,QAAQ,EAAE,WAAW;;YAErB,SAAS,EAAE,CAAC,kEAAW,CAAC;SACxB,CAAC;yCAWsB,kEAAW;OATtB,iBAAiB,CAkG7B;IAAD,wBAAC;CAAA;AAlG6B;;;;;;;;;;;;;ACZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACH;;;;;;;;;;;;;ACD7B;AAAA;AAAA;IACC,eACQ,KAAa,EACb,WAAmB,EACnB,IAAY,EACZ,KAAa,EACb,MAAc;QAJd,UAAK,GAAL,KAAK,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAQ;QACnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IACJ,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IACC,gBACQ,IAAY,EACZ,WAAmB,EACnB,KAAa;QAFb,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;IACJ,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IACC,cACQ,MAAc,EACd,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,KAAa;QAJb,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;IACJ,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IACC,cACQ,GAAW,EACX,IAAY,EACZ,OAAe,EACf,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,KAAa;QANb,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;IACJ,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0C;AAC6B;AAExB;AACd;AAIlC;IAGE,sBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC7B,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAE,QAAe;QAAf,0CAAe;QAC9B,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,OAAO,CAAC;iBAChD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;SACjC;aAAM;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,QAAQ,EAAE,OAAO,CAAC;iBAC5D,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;SACjC;IAEH,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK,EAAE,EAAU;QACxB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAE,OAAO,CAAC;aACrD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK,EAAE,KAAY;QAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACrE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAE,EAAU,EAAE,KAAY;QACvC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC1E,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK,EAAE,EAAU;QAC3B,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAE,OAAO,CAAC;aACxD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAlEU,YAAY;QADxB,gEAAU,EAAE;yCAIgB,kDAAI;OAHpB,YAAY,CAoExB;IAAD,mBAAC;CAAA;AApEwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AAC6B;AAGxB;AACd;AAIlC;IAGE,uBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC7B,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,kCAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,GAAG,IAAI,EAAE,OAAO,CAAC;aACzD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,iCAAS,GAAT,UAAU,KAAK,EAAE,EAAU;QACzB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,EAAE,OAAO,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,iCAAS,GAAT,UAAU,KAAK,EAAE,MAAc;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACtE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,kCAAU,GAAV,UAAW,KAAK,EAAE,EAAU,EAAE,MAAc;QAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAK,EAAE,EAAU;QAC5B,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,EAAE,OAAO,CAAC;aACzD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IA5DU,aAAa;QADzB,gEAAU,EAAE;yCAIgB,kDAAI;OAHpB,aAAa,CA+DzB;IAAD,oBAAC;CAAA;AA/DyB;;;;;;;;;;;;;ACT1B;AAAA;AAAO,IAAI,MAAM,GAAG;IAClB,GAAG,EAAE,4BAA4B;IACjC,EAAE,EAAE,WAAW;CAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHyC;AAC6B;AAGxB;AACd;AAIlC;IAGE,qBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC7B,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAK,EAAE,OAAc;QAAd,wCAAc;QAC5B,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,OAAO,CAAC;iBAC/C,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;SACjC;aAAM;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,OAAO,EAAE,OAAO,CAAC;iBAC1D,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,6BAAO,GAAP,UAAQ,KAAK,EAAE,EAAU;QACvB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,EAAE,EAAE,OAAO,CAAC;aACpD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,6BAAO,GAAP,UAAQ,KAAK,EAAE,IAAU;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACpE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAK,EAAE,EAAU,EAAE,IAAU;QACpC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACzE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,EAAU;QAC1B,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,EAAE,EAAE,OAAO,CAAC;aACvD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAlEU,WAAW;QADvB,gEAAU,EAAE;yCAIgB,kDAAI;OAHpB,WAAW,CAoEvB;IAAD,kBAAC;CAAA;AApEuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AAC6B;AAGtC;AAIlC;IAGE,uBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC7B,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,uCAAe,GAAf,UAAgB,GAAW,EAAE,MAAqB,EAAE,KAAkB,EAAE,KAAa,EAAE,IAAY;QAEjG,OAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACzC,IAAI,QAAQ,GAAQ,IAAI,QAAQ,EAAE,CAAC;YACnC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAChD;YAED,GAAG,CAAC,kBAAkB,GAAG;gBACvB,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC,EAAE;oBACvB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;wBACrB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACnC;yBAAM;wBACL,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBACtB;iBAEF;YACH,CAAC;YAED,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YAC7C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAjCU,aAAa;QADzB,gEAAU,EAAE;yCAIgB,kDAAI;OAHpB,aAAa,CAkCzB;IAAD,oBAAC;CAAA;AAlCyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACa;AAER;AACd;AAGlC;IAKE,qBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAC7B,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,4BAAM,GAAN,UAAO,aAAa,EAAE,OAAc;QAAd,wCAAc;QAClC,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;SACjC;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,MAAM,GAAG,IAAI,CAAC;QAGlB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;QAEzD,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACrE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR,UAAS,gBAAgB;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACxE,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gCAAU,GAAV,UAAW,cAAc;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC5C,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACjC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,cAAc,CAAC,GAAG,EAClE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC5B,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5D,IAAI,QAAQ,IAAI,WAAW,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,KAAK,IAAI,WAAW,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAnEU,WAAW;QADvB,gEAAU,EAAE;yCAMgB,kDAAI;OALpB,WAAW,CAqEvB;IAAD,kBAAC;CAAA;AArEuB;;;;;;;;;;;;ACPxB,0GAA0G,QAAQ,+FAA+F,cAAc,8nCAA8nC,yCAAyC,2QAA2Q,QAAQ,+F;;;;;;;;;;;ACAzpD,iJAAiJ,0CAA0C,+DAA+D,aAAa,4BAA4B,mBAAmB,4BAA4B,YAAY,mBAAmB,mBAAmB,2lBAA2lB,sDAAsD,y0B;;;;;;;;;;;ACArhC,0GAA0G,QAAQ,+FAA+F,cAAc,i2BAAi2B,2CAA2C,6QAA6Q,QAAQ,0Q;;;;;;;;;;;ACAh4C,wJAAwJ,4CAA4C,gHAAgH,aAAa,0CAA0C,oBAAoB,qfAAqf,wCAAwC,4JAA4J,aAAa,kJAAkJ,mBAAmB,iyB;;;;;;;;;;;ACA1uC,uDAAuD,QAAQ,kRAAkR,yEAAyE,0PAA0P,4CAA4C,0HAA0H,aAAa,0rB;;;;;;;;;;;ACAv0B,qW;;;;;;;;;;;ACAA,0GAA0G,QAAQ,+FAA+F,cAAc,upCAAupC,sCAAsC,wXAAwX,QAAQ,kG;;;;;;;;;;;ACA5xD,sDAAsD,QAAQ,+FAA+F,cAAc,ymCAAymC,sCAAsC,uBAAuB,oT;;;;;;;;;;;;ACAj1C;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AAEmD;AAC5B;AACU;AACtB;AAEnC,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,+CAAS,CAAC,CAAC;;;;;;;;;;;;;ACXpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAAwE;AACxE,8DAA8D;AAClC;AACA;AACE;AACC;AACE;AACL;AACF;AACE;AACF;AACC;AACC;AACH;AACA;AACI;AAEA;AACF","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div *ngIf=\\\"identity\\\" class=\\\"navigation col-lg-1\\\">\\n\\t<h1 class=\\\"head-title\\\">\\n\\t\\t<a [routerLink]=\\\"['/']\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-music\\\" aria-hidden=\\\"true\\\"></span>\\n\\t   \\t\\t{{title}}\\n\\t\\t</a>\\n\\t</h1>\\n\\t<nav id=\\\"navigation\\\">\\n\\t\\t<a href=\\\"#\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-search\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\tBuscar\\n\\t\\t</a>\\n\\t\\t<a [routerLink]=\\\"['/artistas', 1]\\\" [routerLinkActive]=\\\"['actived']\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-star\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\tArtistas\\n\\t\\t</a>\\n\\t\\t<a href=\\\"#\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-book\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\tAlbums\\n\\t\\t</a>\\n\\t</nav>\\n\\n\\t<nav id=\\\"user_logged\\\">\\n\\t\\t<div class=\\\"user-image\\\">\\n\\t\\t\\t<img id=\\\"image-logged\\\" src=\\\"{{url + 'get-image-user/' + identity.image}}\\\"/>\\n\\t\\t</div>\\n\\t\\t<span id=\\\"identity_name\\\">\\n\\t\\t\\t{{identity.name}}\\n\\t\\t</span>\\n\\n\\t\\t<a [routerLink]=\\\"['/mis-datos']\\\" [routerLinkActive]=\\\"['actived']\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\tMis datos\\n\\t\\t</a>\\n\\t\\t<a (click)=\\\"logout()\\\" class=\\\"btn-logout\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-log-out\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\tSalir\\n\\t\\t</a>\\n\\t</nav>\\n</div>\\n\\n<div [class.hidden]=\\\"!identity\\\" class=\\\"central col-lg-11\\\">\\n\\t<router-outlet></router-outlet>\\n\\n\\t<div class=\\\"clearfix\\\"></div>\\n\\t<player class=\\\"player\\\" *ngIf=\\\"identity\\\"></player>\\n</div>\\n\\n<div class=\\\"col-lg-11\\\" *ngIf=\\\"!identity\\\">\\n\\t<div class=\\\"col-lg-6\\\">\\n\\t\\t<h1>Identificate</h1>\\n\\t\\t<div *ngIf=\\\"errorMessage\\\">\\n\\t\\t\\t<div class=\\\"alert alert-info\\\">\\n\\t\\t\\t  <strong>Error</strong> {{errorMessage}}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"col-md-7\\\">\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Correo electrónico:</label>\\n\\t\\t\\t\\t<input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t\\t<span *ngIf=\\\"!email.valid && email.touched\\\">\\n\\t\\t\\t\\t\\tEl email es obligatorio\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Contraseña:</label>\\n\\t\\t\\t\\t<input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Entrar\\\" class=\\\"btn btn-primary\\\" />\\n\\t\\t</form>\\n\\t</div>\\n\\n\\t<div class=\\\"col-lg-6\\\">\\n\\t\\t<h1>Registrate</h1>\\n\\t\\t<div *ngIf=\\\"alertRegister\\\">\\n\\t\\t\\t<div class=\\\"alert alert-info\\\">\\n\\t\\t\\t  {{alertRegister}}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRegister()\\\" class=\\\"col-md-10\\\">\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Nombre:</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"user_register.name\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t\\t<span *ngIf=\\\"!name.valid && name.touched\\\">\\n\\t\\t\\t\\t\\tEl nombre es obligatorio\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Apellidos:</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" #surname=\\\"ngModel\\\" name=\\\"surname\\\" [(ngModel)]=\\\"user_register.surname\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t\\t<span *ngIf=\\\"!surname.valid && surname.touched\\\">\\n\\t\\t\\t\\t\\tLos apellidos son obligatorios\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Correo electrónico:</label>\\n\\t\\t\\t\\t<input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user_register.email\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t\\t<span *ngIf=\\\"!email.valid && email.touched\\\">\\n\\t\\t\\t\\t\\tEl email es obligatorio\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<label>Contraseña:</label>\\n\\t\\t\\t\\t<input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user_register.password\\\" class=\\\"form-control\\\" required />\\n\\t\\t\\t\\t<span *ngIf=\\\"!password.valid && password.touched\\\">\\n\\t\\t\\t\\t\\tLa contraseña es obligatoria\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</p>\\n\\n\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Regristrarse\\\" class=\\\"btn btn-primary\\\" />\\n\\n\\t\\t</form> \\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { GLOBAL } from './services/global';\nimport { UserService } from './services/user.service';\nimport { User } from './models/user';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [UserService]\n})\n\nexport class AppComponent implements OnInit{\n  public title = 'MUSIFY';\n  public user: User;\n  public user_register: User;\n  public identity;\n  public token;\n  public errorMessage;\n  public alertRegister;\n  public url: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService:UserService\n  ){\n  \tthis.user = new User('','','','','','ROLE_USER','');\n    this.user_register = new User('','','','','','ROLE_USER','');\n    this.url = GLOBAL.url;\n  }\n\n  ngOnInit(){\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n\n    console.log(this.identity);\n    console.log(this.token);\n  }\n\n  public onSubmit(){\n  \tconsole.log(this.user);\n\n    // Conseguir los datos del usuario identificado\n    this._userService.signup(this.user).subscribe(\n      response => {\n          let identity = response.user;\n          this.identity = identity;\n          console.log(this.identity);\n\n          if(!this.identity._id){\n              alert(\"El usuario no está correctamente identificado\");\n          }else{\n              // Crear elemento en el localstorage para tener al usuario sesión\n              localStorage.setItem('identity', JSON.stringify(identity));\n\n              // Conseguir el token para enviarselo a cada petición http\n              this._userService.signup(this.user, 'true').subscribe(\n                  response => {\n                      let token = response.token;\n                      this.token = token;\n\n                      if(this.token.length <= 0){\n                          alert(\"El token no se ha generado correctamente\");\n                      }else{\n                          // Crear elemento en el localstorage para tener token disponible\n                          localStorage.setItem('token', token);\n                          this.user = new User('','','','','','ROLE_USER','');\n                      }\n                  },\n                  error => {\n                    var errorMessage = <any>error;\n\n                    if(errorMessage != null){\n                      var body = JSON.parse(error._body);\n                      this.errorMessage = body.message;\n\n                      console.log(error);\n                    }\n                  }\n                );\n          }\n      },\n      error => {\n        var errorMessage = <any>error;\n\n        if(errorMessage != null){\n          var body = JSON.parse(error._body);\n          this.errorMessage = body.message;\n\n          console.log(error);\n        }\n      }\n    );\n\n  }\n\n  logout(){\n     localStorage.removeItem('identity');\n     localStorage.removeItem('token');\n     localStorage.clear();\n     this.identity = null;\n     this.token = null;\n     this._router.navigate(['/']);\n  }\n\n  \n\n  onSubmitRegister(){\n    console.log(this.user_register);\n\n    this._userService.register(this.user_register).subscribe(\n      response => {\n        let user = response.user;\n        this.user_register = user;\n\n        if(!user._id){\n          this.alertRegister = 'Error al registrarse';\n        }else{\n          this.alertRegister = 'El registro se ha realizado correctamente, identificate con '+this.user_register.email;\n          this.user_register = new User('','','','','','ROLE_USER','');\n        }\n      },\n      error => {\n        var errorMessage = <any>error;\n\n        if(errorMessage != null){\n          var body = JSON.parse(error._body);\n          this.alertRegister = body.message;\n\n          console.log(error);\n        }\n      }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { routing, appRoutingProviders } from './app.routing';\n\n// general\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home.component';\n\n// user\nimport { UserEditComponent } from './components/user-edit.component';\n\n// artist\nimport { ArtistListComponent } from './components/artist-list.component';\nimport { ArtistAddComponent } from './components/artist-add.component';\nimport { ArtistEditComponent } from './components/artist-edit.component';\nimport { ArtistDetailComponent } from './components/artist-detail.component';\n\n//album\nimport { AlbumAddComponent } from './components/album-add.component';\nimport { AlbumEditComponent } from './components/album-edit.component';\nimport { AlbumDetailComponent } from './components/album-detail.component';\n\n// song\nimport { SongAddComponent } from './components/song-add.component';\nimport { SongEditComponent } from './components/song-edit.component';\nimport { PlayerComponent } from './components/player.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserEditComponent,\n    ArtistListComponent,\n    ArtistAddComponent,\n    ArtistEditComponent,\n    ArtistDetailComponent,\n    AlbumAddComponent,\n    AlbumEditComponent,\n    AlbumDetailComponent,\n    SongAddComponent,\n    SongEditComponent,\n    PlayerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing\n  ],\n  providers: [appRoutingProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// import user\r\nimport { HomeComponent } from './components/home.component';\r\nimport { UserEditComponent } from './components/user-edit.component';\r\n\r\n// import artist\r\nimport { ArtistListComponent } from './components/artist-list.component';\r\nimport { ArtistAddComponent } from './components/artist-add.component';\r\nimport { ArtistEditComponent } from './components/artist-edit.component';\r\nimport { ArtistDetailComponent } from './components/artist-detail.component';\r\n\r\n// import album\r\nimport { AlbumAddComponent } from './components/album-add.component';\r\nimport { AlbumEditComponent } from './components/album-edit.component';\r\nimport { AlbumDetailComponent } from './components/album-detail.component';\r\n\r\n// import song\r\nimport { SongAddComponent } from './components/song-add.component';\r\nimport { SongEditComponent } from './components/song-edit.component';\r\n\r\nconst appRoutes: Routes = [\r\n\t{path: '', component: HomeComponent},\r\n\t{path: 'artistas/:page', component: ArtistListComponent},\r\n\t{path: 'crear-artista', component: ArtistAddComponent},\r\n\t{path: 'editar-artista/:id', component: ArtistEditComponent},\r\n\t{path: 'artista/:id', component: ArtistDetailComponent},\r\n\t{path: 'crear-album/:artist', component: AlbumAddComponent},\r\n\t{path: 'editar-album/:id', component: AlbumEditComponent},\r\n\t{path: 'album/:id', component: AlbumDetailComponent},\r\n\t{path: 'crear-tema/:album', component: SongAddComponent},\r\n\t{path: 'editar-tema/:id', component: SongEditComponent},\r\n\t{path: 'mis-datos', component: UserEditComponent},\r\n\t{path: '**', component: HomeComponent}\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Artist } from '../models/artist';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n\tselector: 'album-add',\r\n\ttemplateUrl: '../views/album-add.html',\r\n\tproviders: [UserService, ArtistService, AlbumService]\r\n})\r\n\r\nexport class AlbumAddComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic artist: Artist;\r\n\tpublic album: Album;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _albumService: AlbumService,\r\n\t\tprivate _artistService: ArtistService\r\n\t){\r\n\t\tthis.titulo = 'Crear nuevo album';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.album = new Album('', '', 2017, '', '');\r\n\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('album-add.component.ts cargado');\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet artist_id = params['artist'];\r\n\t\t\tthis.album.artist = artist_id;\r\n\r\n\t\t\tthis._albumService.addAlbum(this.token, this.album).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.album){\r\n\t\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.alertMessage = '¡El album se ha creado correctamente!';\r\n\t\t\t\t\t\tthis.album = response.album;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis._router.navigate(['/editar-album', response.album._id]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\r\n\t\t});\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Album } from '../models/album';\r\nimport { SongService } from '../services/song.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n\tselector: 'album-detail',\r\n\ttemplateUrl: '../views/album-detail.html',\r\n\tproviders: [UserService, AlbumService, SongService]\r\n})\r\n\r\nexport class AlbumDetailComponent implements OnInit{\r\n\tpublic album: Album;\r\n\tpublic songs: Song[];\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _albumService: AlbumService,\r\n\t\tprivate _songService: SongService\r\n\t){\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('album-detail.component.ts cargado');\r\n\r\n\t\t// Sacar album de la bbdd\r\n\t\tthis.getAlbum();\r\n\t}\r\n\r\n\tgetAlbum(){\r\n\t\t\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._albumService.getAlbum(this.token, id).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif(!response.album){\r\n\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.album = response.album;\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Sacar las canciones\r\n\t\t\t\t\t\tthis._songService.getSongs(this.token, response.album._id).subscribe(\r\n\t\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\t\tif(!response.songs){\r\n\t\t\t\t\t\t\t\tthis.alertMessage = 'Este album no tiene canciones';\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis.songs = response.songs;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => {\r\n\t\t\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t\t\t        if(errorMessage != null){\r\n\t\t\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t\t\t          console.log(error);\r\n\t\t\t\t\t        }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\t\t});\r\n      \r\n\t}\r\n\r\n\tpublic confirmado;\r\n\tonDeleteConfirm(id){\r\n\t\tthis.confirmado = id;\r\n\t}\r\n\r\n\tonCancelSong(){\r\n\t\tthis.confirmado = null;\r\n\t}\r\n\r\n\tonDeleteSong(id){\r\n\t\tthis._songService.deleteSong(this.token, id).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tif(!response.song){\r\n\t\t\t\t\talert('Error ene el servidor');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getAlbum();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t        if(errorMessage != null){\r\n\t\t          var body = JSON.parse(error._body);\r\n\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t          console.log(error);\r\n\t\t        }\r\n\t\t\t}\t\r\n\t\t);\r\n\t}\r\n\r\n\tstartPlayer(song){\r\n\t\tlet song_player = JSON.stringify(song);\r\n\t\tlet file_path = this.url + 'get-song-file/' + song.file;\r\n\t\tlet image_path = this.url + 'get-image-album/' + song.album.image;\r\n\r\n\t\tlocalStorage.setItem('sound_song', song_player);\r\n\r\n\t\tdocument.getElementById(\"mp3-source\").setAttribute(\"src\", file_path);\r\n\t\t(document.getElementById(\"player\") as any).load();\r\n\t\t(document.getElementById(\"player\") as any).play();\r\n\r\n\t\tdocument.getElementById('play-song-title').innerHTML = song.name;\r\n\t\tdocument.getElementById('play-song-artist').innerHTML = song.album.artist.name;\r\n\t\tdocument.getElementById('play-image-album').setAttribute('src', image_path);\r\n\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Artist } from '../models/artist';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n\tselector: 'album-edit',\r\n\ttemplateUrl: '../views/album-add.html',\r\n\tproviders: [UserService, AlbumService, UploadService]\r\n})\r\n\r\nexport class AlbumEditComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic album: Album;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\tpublic is_edit;\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _uploadService: UploadService,\r\n\t\tprivate _albumService: AlbumService,\r\n\t){\r\n\t\tthis.titulo = 'Editar album';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.album = new Album('', '', 2017, '', '');\r\n\t\tthis.is_edit = true;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('album-edit.component.ts cargado');\r\n\r\n\t\t// Conseguir el album\r\n\t\tthis.getAlbum();\r\n\t}\r\n\r\n\tgetAlbum(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._albumService.getAlbum(this.token, id).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.album){\r\n\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.album = response.album;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._albumService.editAlbum(this.token, id, this.album).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.album){\r\n\t\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.alertMessage = '¡El album se ha actualizado correctamente!';\r\n\t\t\t\t\t\tif(!this.filesToUpload){\r\n\t\t\t\t\t\t\t// Redirigir\r\n\t\t\t\t\t\t\tthis._router.navigate(['/artista', response.album.artist]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// Subir la imagen del alblum\r\n\t\t\t\t\t\t\tthis._uploadService.makeFileRequest(this.url+'upload-image-album/'+id, [], this.filesToUpload, this.token, 'image')\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\t\t\t\t\tthis._router.navigate(['/artista', response.album.artist]);\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic filesToUpload: Array<File>;\r\n\tfileChangeEvent(fileInput: any){\r\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n\tselector: 'artist-add',\r\n\ttemplateUrl: '../views/artist-add.html',\r\n\tproviders: [UserService, ArtistService]\r\n})\r\n\r\nexport class ArtistAddComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic artist: Artist;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _artistService: ArtistService\r\n\t){\r\n\t\tthis.titulo = 'Crear nuevo artista';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.artist = new Artist('','','');\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('artist-add.component.ts cargado');\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tconsole.log(this.artist);\r\n\t\tthis._artistService.addArtist(this.token, this.artist).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\t\r\n\t\t\t\tif(!response.artist){\r\n\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.alertMessage = '¡El artista se ha creado correctamente!';\r\n\t\t\t\t\tthis.artist = response.artist;\r\n\t\t\t\t\tthis._router.navigate(['/editar-artista', response.artist._id]);\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t        if(errorMessage != null){\r\n\t\t          var body = JSON.parse(error._body);\r\n\t\t          this.alertMessage = body.message;\r\n\r\n\t\t          console.log(error);\r\n\t\t        }\r\n\t\t\t}\t\r\n\t\t);\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\nimport { AlbumService } from '../services/album.service';\r\nimport { Album } from '../models/album';\r\n\r\n@Component({\r\n\tselector: 'artist-detail',\r\n\ttemplateUrl: '../views/artist-detail.html',\r\n\tproviders: [UserService, ArtistService, AlbumService]\r\n})\r\n\r\nexport class ArtistDetailComponent implements OnInit{\r\n\tpublic artist: Artist;\r\n\tpublic albums: Album[];\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _artistService: ArtistService,\r\n\t\tprivate _albumService: AlbumService\r\n\t){\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('artist-edit.component.ts cargado');\r\n\r\n\t\t// Llamar al metodo del api para sacar un artista en base a su id getArtist\r\n\t\tthis.getArtist();\r\n\t}\r\n\r\n\tgetArtist(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._artistService.getArtist(this.token, id).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif(!response.artist){\r\n\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.artist = response.artist;\r\n\r\n\t\t\t\t\t\t// Sacar los albums del artista\r\n\t\t\t\t\t\tthis._albumService.getAlbums(this.token, response.artist._id).subscribe(\r\n\t\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\t\tif(!response.albums){\r\n\t\t\t\t\t\t\t\tthis.alertMessage = 'Este artista no tiene albums';\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis.albums = response.albums;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror => {\r\n\t\t\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t\t\t        if(errorMessage != null){\r\n\t\t\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t\t\t          console.log(error);\r\n\t\t\t\t\t        }\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tpublic confirmado;\r\n\tonDeleteConfirm(id){\r\n\t\tthis.confirmado = id;\r\n\t}\t\r\n\r\n\tonCancelAlbum(){\r\n\t\tthis.confirmado = null;\r\n\t}\r\n\r\n\tonDeleteAlbum(id){\r\n\t\tthis._albumService.deleteAlbum(this.token, id).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tif(!response.album){\r\n\t\t\t\t\talert('Error en el servidor');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getArtist();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t        if(errorMessage != null){\r\n\t\t          var body = JSON.parse(error._body);\r\n\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t          console.log(error);\r\n\t\t        }\r\n\t\t\t}\t\r\n\t\t);\r\n\t}\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n\tselector: 'artist-edit',\r\n\ttemplateUrl: '../views/artist-add.html',\r\n\tproviders: [UserService, ArtistService, UploadService]\r\n})\r\n\r\nexport class ArtistEditComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic artist: Artist;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\tpublic is_edit;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _uploadService: UploadService,\r\n\t\tprivate _artistService: ArtistService\r\n\t){\r\n\t\tthis.titulo = 'Editar artista';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.artist = new Artist('','','');\r\n\t\tthis.is_edit = true;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('artist-edit.component.ts cargado');\r\n\r\n\t\t// Llamar al metodo del api para sacar un artista en base a su id getArtist\r\n\t\tthis.getArtist();\r\n\t}\r\n\r\n\tgetArtist(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._artistService.getArtist(this.token, id).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif(!response.artist){\r\n\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.artist = response.artist;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tconsole.log(this.artist);\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._artistService.editArtist(this.token, id, this.artist).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.artist){\r\n\t\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.alertMessage = '¡El artista se ha actualizado correctamente!';\r\n\t\t\t\t\t\tif(!this.filesToUpload){\r\n\t\t\t\t\t\t\tthis._router.navigate(['/artista', response.artist._id ]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//Subir la imagen del artista\r\n\t\t\t\t\t\t\tthis._uploadService.makeFileRequest(this.url+'upload-image-artist/'+id, [], this.filesToUpload, this.token, 'image')\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\t\t\t\t\tthis._router.navigate(['/artista', response.artist._id]);\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic filesToUpload: Array<File>;\r\n\tfileChangeEvent(fileInput: any){\r\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { ArtistService } from '../services/artist.service';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Component({\r\n\tselector: 'artist-list',\r\n\ttemplateUrl: '../views/artist-list.html',\r\n\tproviders: [UserService, ArtistService]\r\n})\r\n\r\nexport class ArtistListComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic artists: Artist[];\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic next_page;\r\n\tpublic prev_page;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _artistService: ArtistService,\r\n\t\tprivate _userService: UserService\r\n\t){\r\n\t\tthis.titulo = 'Artistas';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.next_page = 1;\r\n\t\tthis.prev_page = 1;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('artist-list.component.ts cargado');\r\n\r\n\t\t// Conseguir el listado de artistas\r\n\t\tthis.getArtists();\r\n\t}\r\n\r\n\tgetArtists(){\r\n\t\tthis._route.params.forEach((params: Params) =>{\r\n\t\t\t\tlet page = +params['page'];\r\n\t\t\t\tif(!page){\r\n\t\t\t\t\tpage = 1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.next_page = page+1;\r\n\t\t\t\t\tthis.prev_page = page-1;\r\n\r\n\t\t\t\t\tif(this.prev_page == 0){\r\n\t\t\t\t\t\tthis.prev_page = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._artistService.getArtists(this.token, page).subscribe(\r\n\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\tif(!response.artists){\r\n\t\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.artists = response.artists;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t\t        if(errorMessage != null){\r\n\t\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t\t          console.log(error);\r\n\t\t\t\t        }\r\n\t\t\t\t\t}\t\r\n\t\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic confirmado;\r\n\tonDeleteConfirm(id){\r\n\t\tthis.confirmado = id;\r\n\t}\r\n\r\n\tonCancelArtist(){\r\n\t\tthis.confirmado = null;\r\n\t}\r\n\r\n\tonDeleteArtist(id){\r\n\t\tthis._artistService.deleteArtist(this.token, id).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tif(!response.artist){\r\n\t\t\t\t\talert('Error en el servidor');\r\n\t\t\t\t}\r\n\t\t\t\tthis.getArtists();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t        if(errorMessage != null){\r\n\t\t          var body = JSON.parse(error._body);\r\n\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t          console.log(error);\r\n\t\t        }\r\n\t\t\t}\t\r\n\t\t);\r\n\t}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'home',\r\n\ttemplateUrl: '../views/home.html'\r\n})\r\n\r\nexport class HomeComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router\r\n\t){\r\n\t\tthis.titulo = 'Artistas';\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('home.component.ts cargado');\r\n\t}\r\n\r\n}","import {Component, OnInit} from '@angular/core';\r\nimport {Song} from '../models/song';\r\nimport {GLOBAL} from '../services/global';\r\n\r\n@Component({\r\n\tselector: 'player',\r\n\ttemplate: `\r\n\t<div class=\"album-image\">\r\n\t\t<span *ngIf=\"song.album\">\r\n\t\t\t<img id=\"play-image-album\" src=\"{{ url + 'get-image-album/' + song.album.image}}\" />\r\n\t\t</span>\r\n\r\n\t\t<span *ngIf=\"!song.album\">\r\n\t\t\t<img id=\"play-image-album\" src=\"assets/images/default.jpg\" />\r\n\t\t</span>\r\n\t</div>\r\n\r\n\t<div class=\"audio-file\">\r\n\t\t<p>Reproduciendo</p>\r\n\t\t<span id=\"play-song-title\">\r\n\t\t\t{{song.name}}\r\n\t\t</span>\r\n\t\t|\r\n\t\t<span id=\"play-song-artist\">\r\n\t\t\t<span *ngIf=\"song.album.artist\">\r\n\t\t\t\t{{song.album.artist.name}}\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t\t<audio controls id=\"player\">\r\n\t\t\t<source id=\"mp3-source\" src=\"{{ url + 'get-song-file/' + song.file }}\" type=\"audio/mpeg\">\r\n\t\t\tTu navegador no es compatible con HTML5\r\n\t\t</audio>\r\n\t</div>\r\n\r\n\t`\r\n})\r\n\r\nexport class PlayerComponent implements OnInit{\r\n\tpublic url: string;\r\n\tpublic song;\r\n\r\n\tconstructor(){\r\n\t\tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('player cargado');\r\n\r\n\t\tvar song = JSON.parse(localStorage.getItem('sound_song'));\r\n\t\tif(song){\r\n\t\t\tthis.song = song;\r\n\t\t}else{\r\n\t\t\tthis.song = new Song(1, \"\",\"\",\"\",\"\");\r\n\t\t}\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { SongService } from '../services/song.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n\tselector: 'song-add',\r\n\ttemplateUrl: '../views/song-add.html',\r\n\tproviders: [UserService, SongService]\r\n})\r\n\r\nexport class SongAddComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic song: Song;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _songService: SongService\r\n\t){\r\n\t\tthis.titulo = 'Crear nueva canción';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.song = new Song(1,'', '', '', '');\r\n\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('song-add.component.ts cargado');\r\n\t}\r\n\r\n\r\n\tonSubmit(){\r\n\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet album_id = params['album'];\r\n\t\t\tthis.song.album = album_id;\r\n\r\n\t\t\tthis._songService.addSong(this.token, this.song).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.song){\r\n\t\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.alertMessage = '¡La canción se ha creado correctamente!';\r\n\t\t\t\t\t\tthis.song = response.song;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis._router.navigate(['/editar-tema', response.song._id]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { SongService } from '../services/song.service';\r\nimport { Song } from '../models/song';\r\n\r\n@Component({\r\n\tselector: 'song-edit',\r\n\ttemplateUrl: '../views/song-add.html',\r\n\tproviders: [UserService, SongService, UploadService]\r\n})\r\n\r\nexport class SongEditComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic song: Song;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\tpublic alertMessage;\r\n\tpublic is_edit;\r\n\r\n\tconstructor(\r\n\t\tprivate _route: ActivatedRoute,\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _uploadService: UploadService,\r\n\t\tprivate _songService: SongService\r\n\t){\r\n\t\tthis.titulo = 'Editar canción';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n\t\tthis.token = this._userService.getToken();\r\n\t\tthis.url = GLOBAL.url;\r\n\t\tthis.song = new Song(1,'', '', '', '');\r\n\t\tthis.is_edit = true;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('song-edit.component.ts cargado');\r\n\r\n\t\t// Sacar la canción a editar\r\n\t\tthis.getSong();\r\n\t}\r\n\r\n\tgetSong(){\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._songService.getSong(this.token, id).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tif(!response.song){\r\n\t\t\t\t\t\tthis._router.navigate(['/']);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.song = response.song;\r\n\t\t\t\t\t\tconsole.log(this.song);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\t\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          //this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit(){\r\n\r\n\t\tthis._route.params.forEach((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\r\n\t\t\tthis._songService.editSong(this.token, id, this.song).subscribe(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!response.song){\r\n\t\t\t\t\t\tthis.alertMessage = 'Error en el servidor';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.alertMessage = '¡La canción se ha actualizamos correctamente!';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(!this.filesToUpload){\r\n\t\t\t\t\t\t\tthis._router.navigate(['/album', response.song.album]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// Subir el fichero de audio\r\n\t\t\t\t\t\t\tthis._uploadService.makeFileRequest(this.url+'upload-file-song/'+id, [], this.filesToUpload, this.token, 'file')\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\t\t\t\t\tthis._router.navigate(['/album', response.song.album]);\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tvar errorMessage = <any>error;\r\n\r\n\t\t\t        if(errorMessage != null){\r\n\t\t\t          var body = JSON.parse(error._body);\r\n\t\t\t          this.alertMessage = body.message;\r\n\r\n\t\t\t          console.log(error);\r\n\t\t\t        }\r\n\t\t\t\t}\t\r\n\t\t\t);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic filesToUpload;\r\n\tfileChangeEvent(fileInput: any){\r\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\r\n\t}\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../models/user';\r\n\r\n@Component({\r\n\tselector: 'user-edit',\r\n\ttemplateUrl: '../views/user-edit.html',\r\n\tproviders: [UserService]\r\n})\r\n\r\nexport class UserEditComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic user:User;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic alertMessage;\r\n\tpublic url:string;\r\n\r\n\tconstructor(\r\n\t\tprivate _userService: UserService\r\n\t){\r\n\t\tthis.titulo = 'Actualizar mis datos';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n    \tthis.token = this._userService.getToken();\r\n    \tthis.user = this.identity;\r\n    \tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('user-edit.component.ts cargado');\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tthis._userService.updateUser(this.user).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tif(!response.user){\r\n\t\t\t\t\tthis.alertMessage = 'El usuario no se ha actualizado';\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//this.user = response.user;\r\n\t\t\t\t\tlocalStorage.setItem('identity', JSON.stringify(this.user));\r\n\t\t\t\t\tdocument.getElementById(\"identity_name\").innerHTML = this.user.name;\r\n\r\n\t\t\t\t\tif(!this.filesToUpload){\r\n\t\t\t\t\t\t// Redireccion\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.makeFileRequest(this.url+'upload-image-user/'+this.user._id, [], this.filesToUpload).then(\r\n\t\t\t\t\t\t\t(result: any) => {\r\n\r\n\t\t\t\t\t\t\t\tthis.user.image = result.image;\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('identity', JSON.stringify(this.user));\r\n\r\n\t\t\t\t\t\t\t\tlet image_path = this.url+'get-image-user/'+this.user.image;\r\n\t\t\t\t\t\t\t\tdocument.getElementById('image-logged').setAttribute('src', image_path);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.alertMessage = 'Datos actualizados correctamente';\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t        error => {\r\n\t            var errorMessage = <any>error;\r\n\r\n\t            if(errorMessage != null){\r\n\t              var body = JSON.parse(error._body);\r\n\t              this.alertMessage = body.message;\r\n\r\n\t              console.log(error);\r\n\t            }\r\n\t        }\t\r\n\t\t);\r\n\t}\r\n\r\n\tpublic filesToUpload: Array<File>;\r\n\r\n\tfileChangeEvent(fileInput: any){\r\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\r\n\t}\r\n\r\n\tmakeFileRequest(url: string, params: Array<string>, files: Array<File>){\r\n\t\tvar token = this.token;\r\n\r\n\t\treturn new Promise(function(resolve, reject){\r\n\t\t\tvar formData:any = new FormData();\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\r\n\t\t\tfor(var i = 0; i < files.length; i++){\r\n\t\t\t\tformData.append('image', files[i], files[i].name);\r\n\t\t\t}\r\n\r\n\t\t\txhr.onreadystatechange = function(){\r\n\t\t\t\tif(xhr.readyState == 4){\r\n\t\t\t\t\tif(xhr.status == 200){\r\n\t\t\t\t\t\tresolve(JSON.parse(xhr.response));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treject(xhr.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txhr.open('POST', url, true);\r\n\t\t\txhr.setRequestHeader('Authorization', token);\r\n\t\t\txhr.send(formData);\r\n\t\t});\r\n\r\n\t}\r\n\r\n}","export * from './app.component';\nexport * from './app.module';\n","export class Album{\r\n\tconstructor(\r\n\t\tpublic title: string,\r\n\t\tpublic description: string,\r\n\t\tpublic year: number,\r\n\t\tpublic image: string,\r\n\t\tpublic artist: string\r\n\t){}\r\n}","export class Artist{\r\n\tconstructor(\r\n\t\tpublic name: string,\r\n\t\tpublic description: string,\r\n\t\tpublic image: string\r\n\t){}\r\n}","export class Song{\r\n\tconstructor(\r\n\t\tpublic number: number,\r\n\t\tpublic name: string,\r\n\t\tpublic duration: string,\r\n\t\tpublic file: string,\r\n\t\tpublic album: string\r\n\t){}\r\n}","export class User{\r\n\tconstructor(\r\n\t\tpublic _id: string,\r\n\t\tpublic name: string,\r\n\t\tpublic surname: string,\r\n\t\tpublic email: string,\r\n\t\tpublic password: string,\r\n\t\tpublic role: string,\r\n\t\tpublic image: string\r\n\t){}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { GLOBAL } from './global';\r\nimport { Album } from '../models/album';\r\n\r\n@Injectable()\r\nexport class AlbumService {\r\n  public url: string;\r\n\r\n  constructor(private _http: Http) {\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  getAlbums(token, artistId = null) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    if (artistId == null) {\r\n      return this._http.get(this.url + 'albums', options)\r\n        .pipe(map(res => res.json()));\r\n    } else {\r\n      return this._http.get(this.url + 'albums/' + artistId, options)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n\r\n  }\r\n\r\n  getAlbum(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.get(this.url + 'album/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  addAlbum(token, album: Album) {\r\n    let params = JSON.stringify(album);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.post(this.url + 'album', params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  editAlbum(token, id: string, album: Album) {\r\n    let params = JSON.stringify(album);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.put(this.url + 'album/' + id, params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteAlbum(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.delete(this.url + 'album/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n//import 'rxjs/add/operator/map';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { GLOBAL } from './global';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Injectable()\r\nexport class ArtistService {\r\n  public url: string;\r\n\r\n  constructor(private _http: Http) {\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  getArtists(token, page) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.get(this.url + 'artists/' + page, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getArtist(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.get(this.url + 'artist/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  addArtist(token, artist: Artist) {\r\n    let params = JSON.stringify(artist);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.post(this.url + 'artist', params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  editArtist(token, id: string, artist: Artist) {\r\n    let params = JSON.stringify(artist);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.put(this.url + 'artist/' + id, params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteArtist(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.delete(this.url + 'artist/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n\r\n}\r\n","export var GLOBAL = {\r\n  url: 'http://localhost:3977/api/',\r\n  ip: '127.0.0.1'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { GLOBAL } from './global';\r\nimport { Song } from '../models/song';\r\n\r\n@Injectable()\r\nexport class SongService {\r\n  public url: string;\r\n\r\n  constructor(private _http: Http) {\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  getSongs(token, albumId = null) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    if (albumId == null) {\r\n      return this._http.get(this.url + 'songs', options)\r\n        .pipe(map(res => res.json()));\r\n    } else {\r\n      return this._http.get(this.url + 'songs/' + albumId, options)\r\n        .pipe(map(res => res.json()));\r\n    }\r\n  }\r\n\r\n  getSong(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.get(this.url + 'song/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  addSong(token, song: Song) {\r\n    let params = JSON.stringify(song);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.post(this.url + 'song', params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  editSong(token, id: string, song: Song) {\r\n    let params = JSON.stringify(song);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    return this._http.put(this.url + 'song/' + id, params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteSong(token, id: string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this._http.delete(this.url + 'song/' + id, options)\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { GLOBAL } from './global';\r\nimport { Artist } from '../models/artist';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n  public url: string;\r\n\r\n  constructor(private _http: Http) {\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>, token: string, name: string) {\r\n\r\n    return new Promise(function(resolve, reject) {\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for (var i = 0; i < files.length; i++) {\r\n        formData.append(name, files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState == 4) {\r\n          if (xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n    });\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  public identity;\r\n  public token;\r\n  public url: string;\r\n\r\n  constructor(private _http: Http) {\r\n    this.url = GLOBAL.url;\r\n  }\r\n\r\n  signup(user_to_login, gethash = null) {\r\n    if (gethash != null) {\r\n      user_to_login.gethash = gethash;\r\n    }\r\n    let json = JSON.stringify(user_to_login);\r\n    let params = json;\r\n\r\n\r\n    console.log('user_to_login', params, this.url + 'login');\r\n\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n    return this._http.post(this.url + 'login', params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  register(user_to_register) {\r\n    let params = JSON.stringify(user_to_register);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n    return this._http.post(this.url + 'register', params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  updateUser(user_to_update) {\r\n    let params = JSON.stringify(user_to_update);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.getToken()\r\n    });\r\n\r\n    return this._http.put(this.url + 'update-user/' + user_to_update._id,\r\n      params, { headers: headers })\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getIdentity() {\r\n    let identity = JSON.parse(localStorage.getItem('identity'));\r\n\r\n    if (identity != \"undefined\") {\r\n      this.identity = identity;\r\n    } else {\r\n      this.identity = null;\r\n    }\r\n\r\n    return this.identity;\r\n  }\r\n\r\n  getToken() {\r\n    let token = localStorage.getItem('token');\r\n\r\n    if (token != \"undefined\") {\r\n      this.token = token;\r\n    } else {\r\n      this.token = null;\r\n    }\r\n\r\n    return this.token;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"col-lg-6\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t<h1>{{titulo}}</h1>\\r\\n\\r\\n\\t<div *ngIf=\\\"alertMessage\\\">\\r\\n\\t\\t<div class=\\\"alert alert-info\\\">\\r\\n\\t\\t  {{alertMessage}}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<form #formAlbum=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Titulo</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #title=\\\"ngModel\\\" name=\\\"title\\\" [(ngModel)]=\\\"album.title\\\" required class=\\\"form-control\\\"/>\\r\\n\\t\\t\\t<span *ngIf=\\\"!title.valid && title.touched\\\">\\r\\n\\t\\t\\t\\tEl titulo es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Descripción</label>\\r\\n\\t\\t\\t<textarea #description=\\\"ngModel\\\" name=\\\"description\\\" [(ngModel)]=\\\"album.description\\\" required class=\\\"form-control\\\"></textarea>\\r\\n\\t\\t\\t<span *ngIf=\\\"!description.valid && description.touched\\\">\\r\\n\\t\\t\\t\\tLa descripción es obligatoria\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Año</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #year=\\\"ngModel\\\" name=\\\"year\\\" [(ngModel)]=\\\"album.year\\\" required class=\\\"form-control\\\"/>\\r\\n\\t\\t\\t<span *ngIf=\\\"!year.valid && year.touched\\\">\\r\\n\\t\\t\\t\\tEl año es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"is_edit\\\">\\r\\n\\t\\t\\t<div class=\\\"album_image_for_edit\\\" *ngIf=\\\"album.image && album.image != 'null'\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"{{url + 'get-image-album/' + album.image }}\\\" />\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<label> Sube la imagen del album</label>\\r\\n\\t\\t\\t\\t<input type=\\\"file\\\" placeholder=\\\"Subir imagen...\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"{{titulo}}\\\" [disabled]=\\\"!formAlbum.form.valid\\\" class=\\\"btn btn-success\\\"/>\\r\\n\\r\\n\\t</form>\\r\\n</div>\"","module.exports = \"<div class=\\\"album-box\\\" *ngIf=\\\"album\\\">\\r\\n\\t<div id=\\\"album-head-card\\\">\\r\\n\\t\\t<div class=\\\"image\\\">\\r\\n\\t\\t\\t<img src=\\\"{{ url + 'get-image-album/' + album.image }}\\\" />\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"data\\\">\\r\\n\\t\\t\\t<h1>{{album.title}}</h1>\\r\\n\\t\\t\\t<p><strong>{{album.artist.name}}</strong></p>\\r\\n\\t\\t\\t<p>{{album.year}}</p>\\r\\n\\t\\t\\t<p>{{album.description}}</p>\\r\\n\\r\\n\\t\\t\\t<a [routerLink]=\\\"['/crear-tema', album._id]\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t\\t\\t\\tAñadir canción\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t<div id=\\\"gallery-songs\\\" *ngIf=\\\"songs\\\">\\r\\n\\t\\t<ul id=\\\"songs-list\\\">\\r\\n\\t\\t\\t<li *ngFor=\\\"let song of songs\\\" class=\\\"song-item\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"btn btn-success\\\" (click)=\\\"startPlayer(song)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-play\\\" aria-hidden=\\\"true\\\"></span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\r\\n\\t\\t\\t\\t\\t{{song.number + '. '+ song.name + ' - '+ song.duration}}\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"buttons\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editar-tema', song._id]\\\" class=\\\"btn btn-warning\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEditar\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"onDeleteConfirm(song._id)\\\" class=\\\"btn btn-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tBorrar\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"seguro seguro-song\\\" *ngIf=\\\"confirmado == song._id\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"onDeleteSong(song._id)\\\" class=\\\"btn btn-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEliminar\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"onCancelSong()\\\" class=\\\"btn btn-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tCancelar\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"<div class=\\\"col-lg-6\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t<h1>{{titulo}}</h1>\\r\\n\\r\\n\\t<div *ngIf=\\\"alertMessage\\\">\\r\\n\\t\\t<div class=\\\"alert alert-info\\\">\\r\\n\\t\\t  {{alertMessage}}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<form #formArtist=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Nombre</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"artist.name\\\" required class=\\\"form-control\\\"/>\\r\\n\\t\\t\\t<span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n\\t\\t\\t\\tEl nombre es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Descripción</label>\\r\\n\\t\\t\\t<textarea #description=\\\"ngModel\\\" name=\\\"description\\\" [(ngModel)]=\\\"artist.description\\\" required class=\\\"form-control\\\"></textarea>\\r\\n\\t\\t\\t<span *ngIf=\\\"!description.valid && description.touched\\\">\\r\\n\\t\\t\\t\\tLa descripción es obligatoria\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"is_edit\\\">\\r\\n\\t\\t\\t<div class=\\\"artist_image_for_edit\\\" *ngIf=\\\"artist.image && artist.image != 'null'\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"{{url + 'get-image-artist/' + artist.image }}\\\" />\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<label> Sube la imagen del artista</label>\\r\\n\\t\\t\\t\\t<input type=\\\"file\\\" placeholder=\\\"Subir imagen...\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"{{titulo}}\\\" [disabled]=\\\"!formArtist.form.valid\\\" class=\\\"btn btn-success\\\"/>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-lg-6\\\" *ngIf=\\\"!identity || identity.role != 'ROLE_ADMIN'\\\">\\r\\n\\t<h1>Error</h1>\\r\\n\\t<p>No tienes acceso a esta parte de la aplicación</p>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"artist\\\" class=\\\"artist-box\\\">\\r\\n\\r\\n\\t<div id=\\\"artist-head-card\\\">\\r\\n\\t\\t<div class=\\\"image\\\">\\r\\n\\t\\t\\t<img src=\\\"{{ url + 'get-image-artist/' + artist.image }}\\\" *ngIf=\\\"artist.image && artist.image !== 'null'\\\"/>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"data\\\">\\r\\n\\t\\t\\t<h1>{{artist.name}}</h1>\\r\\n\\t\\t\\t<p class=\\\"description\\\">{{artist.description}}</p>\\r\\n\\r\\n\\t\\t\\t<a *ngIf=\\\"identity.role == 'ROLE_ADMIN'\\\" [routerLink]=\\\"['/crear-album', artist._id]\\\" class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\tAñadir album\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t\\r\\n\\t<div id=\\\"gallery-albums\\\" *ngIf=\\\"albums\\\">\\r\\n\\t\\t<!-- LISTAR LOS ALBUMS -->\\r\\n\\t\\t<ul class=\\\"album-list\\\">\\r\\n\\t\\t\\t<li *ngFor=\\\"let album of albums\\\" class=\\\"col-lg-4 album-item\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"album-image\\\">\\r\\n\\t\\t\\t\\t\\t<img src=\\\"{{url + 'get-image-album/' + album.image}}\\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"album-name\\\">\\r\\n\\t\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/album', album._id]\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{album.title}}\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\r\\n\\t\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/artista', album.artist._id]\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{album.artist.name}}\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"buttons\\\" *ngIf=\\\"identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editar-album', album._id]\\\" class=\\\"btn btn-sm btn-warning\\\">Editar</a>\\r\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"onDeleteConfirm(album._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tBorrar\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"seguro seguro-album\\\" *ngIf=\\\"confirmado == album._id\\\">\\r\\n\\t\\t\\t\\t\\t<a (click)=\\\"onDeleteAlbum(album._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\tEliminar\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<a (click)=\\\"onCancelAlbum()\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\tCancelar\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"<div class=\\\"head-page\\\">\\r\\n\\t<h1>{{titulo}}</h1>\\r\\n\\r\\n\\t<a [routerLink]=\\\"['/crear-artista']\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\" class=\\\"btn btn-default\\\">\\r\\n\\t\\tAñadir artista\\r\\n\\t</a>\\r\\n\\r\\n\\t<ul class=\\\"pagination pull-right\\\">\\r\\n\\t\\t<li><a [routerLink]=\\\"['/artistas', prev_page]\\\">&laquo;</a></li>\\r\\n\\t\\t<li><a [routerLink]=\\\"['/artistas', next_page]\\\">&raquo;</a></li>\\r\\n\\t</ul>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<ul class=\\\"artist-list\\\" *ngIf=\\\"identity\\\">\\r\\n\\t<li *ngFor=\\\"let artist of artists\\\" class=\\\"col-lg-3 artist-item\\\">\\r\\n\\t\\t<div class=\\\"artist-image\\\">\\r\\n\\t\\t\\t<img src=\\\"{{ url + 'get-image-artist/' + artist.image }}\\\"/>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"artist-name\\\">\\r\\n\\t\\t\\t<a [routerLink]=\\\"['/artista', artist._id]\\\">\\r\\n\\t\\t\\t\\t{{artist.name}}\\r\\n\\t\\t\\t</a>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"buttons\\\" *ngIf=\\\"identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/editar-artista', artist._id]\\\" class=\\\"btn btn-sm btn-warning\\\">Editar</a>\\r\\n\\t\\t\\t\\t<a (click)=\\\"onDeleteConfirm(artist._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n\\t\\t\\t\\t\\tBorrar\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"seguro\\\" *ngIf=\\\"confirmado == artist._id\\\">\\r\\n\\t\\t\\t\\t<a (click)=\\\"onDeleteArtist(artist._id)\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n\\t\\t\\t\\t\\tEliminar\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<a (click)=\\\"onCancelArtist()\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n\\t\\t\\t\\t\\tCancelar\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</li>\\r\\n</ul>\"","module.exports = \"<div class=\\\"col-lg-8 col-lg-offset-2\\\">\\r\\n\\t<div class=\\\"jumbotron\\\">\\r\\n\\t  <h1>Bienvenido a MUSIFY</h1>\\r\\n\\t  <p>Empieza a escuchar música de tus artistas favoritos y descubre nuevos hits :D</p>\\r\\n\\t  <p><a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/artistas', 1]\\\" role=\\\"button\\\">Ver artistas</a></p>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"<div class=\\\"col-lg-6\\\" *ngIf=\\\"identity && identity.role == 'ROLE_ADMIN'\\\">\\r\\n\\t<h1>{{titulo}}</h1>\\r\\n\\r\\n\\t<div *ngIf=\\\"alertMessage\\\">\\r\\n\\t\\t<div class=\\\"alert alert-info\\\">\\r\\n\\t\\t  {{alertMessage}}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<form #formSong=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Número</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #number=\\\"ngModel\\\" name=\\\"number\\\" [(ngModel)]=\\\"song.number\\\" required class=\\\"form-control\\\"/>\\r\\n\\t\\t\\t<span *ngIf=\\\"!number.valid && number.touched\\\">\\r\\n\\t\\t\\t\\tEl número de la canción es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Titulo</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"song.name\\\" required class=\\\"form-control\\\"/>\\r\\n\\t\\t\\t<span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n\\t\\t\\t\\tEl titulo es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Duración</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #duration=\\\"ngModel\\\" name=\\\"duration\\\" [(ngModel)]=\\\"song.duration\\\" required class=\\\"form-control\\\" />\\r\\n\\t\\t\\t<span *ngIf=\\\"!duration.valid && duration.touched\\\">\\r\\n\\t\\t\\t\\tLa duración es obligatoria\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"is_edit\\\">\\r\\n\\t\\t\\t<div class=\\\"song_file_for_edit\\\" *ngIf=\\\"song.file && song.file != 'null'\\\">\\r\\n\\t\\t\\t\\t<audio controls>\\r\\n\\t\\t\\t\\t\\t<source src=\\\"{{ url + 'get-song-file/' + song.file }}\\\" type=\\\"audio/mpeg\\\" />\\r\\n\\t\\t\\t\\t\\t\\tEl navegador web no soporta la reproducción de audio\\r\\n\\t\\t\\t\\t</audio>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<label> Sube el fichero de audio</label>\\r\\n\\t\\t\\t\\t<input type=\\\"file\\\" placeholder=\\\"Subir fichero...\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"{{titulo}}\\\" [disabled]=\\\"!formSong.form.valid\\\" class=\\\"btn btn-success\\\"/>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"col-lg-6\\\">\\r\\n\\t<h1>{{titulo}}</h1>\\r\\n\\r\\n\\t<div *ngIf=\\\"alertMessage\\\">\\r\\n\\t\\t<div class=\\\"alert alert-info\\\">\\r\\n\\t\\t  {{alertMessage}}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<form #userUpdateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"col-md-10\\\">\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Nombre:</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" required />\\r\\n\\t\\t\\t<span *ngIf=\\\"!name.valid && name.touched\\\">\\r\\n\\t\\t\\t\\tEl nombre es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Apellidos:</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" #surname=\\\"ngModel\\\" name=\\\"surname\\\" [(ngModel)]=\\\"user.surname\\\" class=\\\"form-control\\\" required />\\r\\n\\t\\t\\t<span *ngIf=\\\"!surname.valid && surname.touched\\\">\\r\\n\\t\\t\\t\\tLos apellidos son obligatorios\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Correo electrónico:</label>\\r\\n\\t\\t\\t<input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" required />\\r\\n\\t\\t\\t<span *ngIf=\\\"!email.valid && email.touched\\\">\\r\\n\\t\\t\\t\\tEl email es obligatorio\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<div class=\\\"image_for_edit\\\" *ngIf=\\\"user.image && user.image != 'null'\\\">\\r\\n\\t\\t\\t<img src=\\\"{{url + 'get-image-user/' + user.image}}\\\" style=\\\"width: 50px;\\\"/>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<label>Sube tu foto:</label>\\r\\n\\t\\t\\t<input type=\\\"file\\\" placeholder=\\\"Subir imagen...\\\" (change)=\\\"fileChangeEvent($event)\\\" />\\r\\n\\t\\t</p>\\r\\n\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"Actualizar mis datos\\\" class=\\\"btn btn-primary\\\" />\\r\\n\\r\\n\\t</form> \\r\\n</div>\"","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n"],"sourceRoot":""}